name: Build

on: 
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feature/*'
      - 'fix/*'
      - 'chore/*'
      - 'release/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - 'main'
      - 'develop'
      - 'feature/*'
      - 'fix/*'
      - 'chore/*'
      - 'release/*'
      - 'hotfix/*'
  workflow_run:
    workflows:
      - "Tests"
    types:
      - completed

jobs:
  build:
    name: Bundle Application
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'    
      run: yarn install

    - name: Build
      run: yarn build --if-present 

    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/
