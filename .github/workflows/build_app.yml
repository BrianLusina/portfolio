name: Build

on: 
  push:
    branches:
      - '**'

jobs:
  build:
    name: Bundle Application

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: oven-sh/setup-bun@v2
      id: bun-setup
      with:
        bun-version: latest

    - name: Install dependencies
      if: steps.bun-setup.cache-hit != 'true'
      run: bun install

    - name: Build Production
      if: github.ref == 'refs/heads/main'
      run: |
        bun run build
      env:
        VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        VITE_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        VITE_ENV: production
        VITE_SENTRY_TRACES_SAMPLE_RATE: 0.1
        VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        VITE_BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}

    - uses: actions/upload-artifact@v4
      with:
        name: build
        path: dist/
        if-no-files-found: 'warn'

