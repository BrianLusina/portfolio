name: Deploy

on:
  push:
    branches:
      - 'develop'
      - 'main'

jobs:
  deploy:
    name: Deploy

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.cache-dir-path.outputs.dir }}          
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'    
      run: yarn install

    - name: Build Staging
      if: github.ref == 'refs/heads/develop'
      run: yarn build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        ENV: staging
        SENTRY_TRACES_SAMPLE_RATE: 1.0

    - name: Deploy Staging
      if: github.ref == 'refs/heads/develop'
      run: yarn deploy:staging -- --token ${{ secrets.SURGE_TOKEN }}

    - name: Build Production
      if: github.ref == 'refs/heads/main'
      run: |
        yarn build
        mv build docs
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        ENV: production
        SENTRY_TRACES_SAMPLE_RATE: 0.5

    # - name: Push Production
    #   if: github.ref == 'refs/heads/main'
    #   run: |
    #     git config --global user.name github-actions
    #     git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'      
    #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    #     git add docs
    #     git commit -am "updating docs" ||  true
    #     git push --force origin HEAD:$GITHUB_REF || true
