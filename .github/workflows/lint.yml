name: Lint

on: [push]

jobs:
  lint:
    name: Lint
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: hadolint/hadolint-action@v2.0.0
      id: hadolint
      with:
        dockerfile: Dockerfile

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `
          #### Hadolint: \`${{ steps.hadolint.outcome }}\`
          \`\`\`
          ${process.env.HADOLINT_RESULTS}
          \`\`\`
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.cache-dir-path.outputs.dir }}          
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Lint Code
      run: yarn lint

    - name: Lint Styles
      run: yarn lint:styles
