name: Sentry Release

on: 
  push:
    branches:
      - 'develop'
      - 'main'

jobs:
  release:
    name: Sentry Release

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.cache-dir-path.outputs.dir }}          
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'    
      run: yarn install

    - name: Run Staging Build
      if: ${{ github.ref }} == 'refs/heads/develop'
      run: yarn build --if-present
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        ENV: staging
        NODE_ENV: staging

    - name: Create Sentry Staging release
      if: ${{ github.ref }} == 'refs/heads/develop'
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: staging
        sourcemaps: ./build/static/js

    - name: Run Production Build
      if: ${{ github.ref }} == 'refs/heads/main'
      run: yarn build --if-present
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        ENV: production
        NODE_ENV: production

    - name: Create Sentry Production release
      if: ${{ github.ref }} == 'refs/heads/main'
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production
        sourcemaps: ./build/static/js
